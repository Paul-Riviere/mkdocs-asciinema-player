---
version: "3"

dotenv: [".config/environments/.env"]

vars:
  USE_VENV: '{{ .USE_VENV | default true }}'
  PYTHON: '{{ .PYTHON | default "python3" }}'
  PYTHON_MIN_VERSION: 3.9
  TASK_MIN_VERSION: 3.32.0
  ASCIINEMA_PLAYER_VERSION: 3.6.3

includes:
  check: .taskfiles/check.yml
  lint: .taskfiles/lint.yml
  test: .taskfiles/test.yml
  update: .taskfiles/update.yml

tasks:
  default:
    cmds:
      - task: help

  bootstrap:
    desc: Bootstrap Python venv (requirements)
    deps: [check:all]
    cmds:
      - >
        if [ "{{ .USE_VENV }}" = "true" ]; then
          {{ .PYTHON }} -m venv .venv &&
          source .venv/bin/activate &&
          pip install --upgrade pip &&
          pip install -e .[dev,lint,test]
        else
          pip install --upgrade pip &&
          pip install -e .[dev,lint,test]
        fi

  clean:
    desc: Cleanup project
    cmds:
      - rm -rf .mypy_cache
      - rm -rf .pytest_cache
      - rm -rf .task
      - rm -rf .venv
      - rm -rf docs/assets/css
      - rm -rf docs/assets/js
      - rm -rf site
      - rm -rf src/mkdocs_asciinema_player.egg-info
      - rm -rf src/mkdocs_asciinema_player/__pycache__
      - rm -rf tests/unit/__pycache__

  reinit:
    desc: Reinitialization Python venv (requirements)
    cmds:
      - task: clean
      - task: bootstrap

  pipeline:
    desc: Simulate run pipeline
    cmds:
      - task: lint:all
      - task: test:pytest

  help:
    desc: Display help
    cmds:
      - task --list
